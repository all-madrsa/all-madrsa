<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Nikah Profiles</title>
  <style>
    body {font-family:sans-serif;background:#f7f7f7;margin:0;padding:0;}
    header {background:#008080;color:#fff;padding:1rem;text-align:center;font-size:1.5rem;}
    .container {max-width:1000px;margin:1rem auto;padding:1rem;}
    form {background:#fff;padding:1rem;border-radius:10px;box-shadow:0 0 10px #ccc;margin-bottom:1rem;}
    form input,form select {width:100%;margin-bottom:10px;padding:8px;}
    form button {background:#008080;color:#fff;padding:10px;width:100%;border:none;cursor:pointer;font-size:1rem;}
    .profiles {display:grid;grid-template-columns:repeat(auto-fit,minmax(220px,1fr));gap:1rem;}
    .card {background:#fff;padding:1rem;border-radius:10px;box-shadow:0 0 8px #ddd;cursor:pointer;transition:transform .2s;}
    .card:hover {transform:scale(1.02);}
    .card img {width:100%;height:200px;object-fit:cover;border-radius:10px;margin-bottom:10px;}
    .popup {position:fixed;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,0.7);display:none;align-items:center;justify-content:center;}
    .popup-content {background:#fff;padding:1rem;border-radius:10px;max-width:400px;width:90%;}
    .close {float:right;cursor:pointer;font-size:1.2rem;}
    .search-box {margin-bottom:1rem;}
    .search-box input {width:100%;padding:8px;}
    .admin-approvals label {display:block;margin-bottom:5px;}
    .contactBtn {background:#008080;color:#fff;padding:5px 10px;border:none;border-radius:5px;cursor:pointer;width:100%;}
  </style>
</head>
<body>
  <header>Nikah Profiles Page</header>
  <div class="container">
    <div class="search-box">
      <input type="text" id="searchInput" placeholder="Search by name, city, education...">
    </div>

    <!-- Profile Upload Form -->
    <form id="profileForm">
      <h3>Create Profile</h3>
      <input type="text" id="name" placeholder="Name" required />
      <input type="number" id="age" placeholder="Age" required />
      <input type="text" id="marital" placeholder="Marital Status" required />
      <input type="text" id="city" placeholder="City" required />
      <input type="text" id="education" placeholder="Education" required />
      <input type="text" id="occupation" placeholder="Occupation" required />
      <input type="text" id="diet" placeholder="Diet (Veg/Non-Veg)" required />
      <input type="file" id="photo" accept="image/*" required />
      
      <div class="admin-approvals">
        <strong>Admin Approvals (tick to show):</strong>
        <label><input type="checkbox" id="approveName" checked>Name</label>
        <label><input type="checkbox" id="approveAge" checked>Age</label>
        <label><input type="checkbox" id="approveMarital" checked>Marital</label>
        <label><input type="checkbox" id="approveCity" checked>City</label>
        <label><input type="checkbox" id="approveEducation" checked>Education</label>
        <label><input type="checkbox" id="approveOccupation" checked>Occupation</label>
        <label><input type="checkbox" id="approveDiet" checked>Diet</label>
        <label><input type="checkbox" id="approvePhoto" checked>Photo</label>
      </div>
      <button type="submit">Upload Profile</button>
    </form>

    <!-- Profiles Display -->
    <div class="profiles" id="profiles"></div>
  </div>

  <!-- Profile Popup -->
  <div class="popup" id="profilePopup">
    <div class="popup-content">
      <span class="close" onclick="closePopup('profilePopup')">&times;</span>
      <div id="profileDetails"></div>
    </div>
  </div>

  <!-- Contact Popup -->
  <div class="popup" id="contactPopup">
    <div class="popup-content">
      <span class="close" onclick="closePopup('contactPopup')">&times;</span>
      <h3>Contact</h3>
      <form id="contactForm">
        <input type="text" id="contactName" placeholder="Your Name" required>
        <input type="text" id="contactMessage" placeholder="Your Message" required>
        <button type="submit">Send</button>
      </form>
    </div>
  </div>

  <script type="module">
    // âœ… Your Firebase Config here â†“
    const firebaseConfig = {
      apiKey: "YOUR_FIREBASE_KEY",
      authDomain: "YOUR_FIREBASE_DOMAIN",
      projectId: "YOUR_PROJECT_ID",
      storageBucket: "YOUR_BUCKET",
      messagingSenderId: "YOUR_ID",
      appId: "YOUR_APP_ID"
    };

    // âœ… ImgBB API Key â†“
    const IMGBB_KEY = "YOUR_IMGBB_API_KEY";

    import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-app.js";
    import { getFirestore, collection, addDoc, getDocs } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore.js";

    const app = initializeApp(firebaseConfig);
    const db = getFirestore(app);
    const profilesCol = collection(db, "nikah_profiles");
    const contactsCol = collection(db, "nikah_contacts");

    const profileForm = document.getElementById("profileForm");
    const profilesDiv = document.getElementById("profiles");
    const searchInput = document.getElementById("searchInput");
    const profilePopup = document.getElementById("profilePopup");
    const profileBody = document.getElementById("profileDetails");
    const contactPopup = document.getElementById("contactPopup");

    let allProfiles = [];
    let selectedProfileId = null;

    async function uploadImage(file) {
      const form = new FormData();
      form.append("image", file);
      const res = await fetch(`https://api.imgbb.com/1/upload?key=${IMGBB_KEY}`, { method: "POST", body: form });
      const data = await res.json();
      return data.data.url;
    }

    profileForm.addEventListener("submit", async (e) => {
      e.preventDefault();
      const file = document.getElementById("photo").files[0];
      const imgURL = await uploadImage(file);

      const profileData = {
        name: name.value, age: age.value, marital: marital.value, city: city.value,
        education: education.value, occupation: occupation.value, diet: diet.value,
        photoUrl: imgURL,
        approvals: {
          name: approveName.checked, age: approveAge.checked, marital: approveMarital.checked,
          city: approveCity.checked, education: approveEducation.checked, occupation: approveOccupation.checked,
          diet: approveDiet.checked, photo: approvePhoto.checked
        }
      };
      await addDoc(profilesCol, profileData);
      profileForm.reset();
      loadProfiles();
    });

    async function loadProfiles() {
      profilesDiv.innerHTML = "";
      const snapshot = await getDocs(profilesCol);
      allProfiles = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
      renderProfiles(allProfiles);
    }

    function renderProfiles(list) {
      profilesDiv.innerHTML = "";
      list.forEach(p => {
        const card = document.createElement("div");
        card.className = "card";
        card.innerHTML = `
          ${p.approvals.photo ? `<img src="${p.photoUrl}" />` : ""}
          <h3>${p.approvals.name ? p.name : "Private"}</h3>
          <p>${p.approvals.city ? p.city : ""}</p>
          <button class="contactBtn">ðŸ“© Contact</button>
        `;
        card.onclick = e => {
          if (!e.target.classList.contains("contactBtn")) {
            let html = `
              ${p.approvals.photo ? `<img src="${p.photoUrl}" />` : ""}
              <h2 class="text-xl font-bold mb-2">${p.approvals.name ? p.name : "Private"}</h2>
              <p><b>Age:</b> ${p.approvals.age ? p.age : "Private"}</p>
              <p><b>Marital:</b> ${p.approvals.marital ? p.marital : "Private"}</p>
              <p><b>City:</b> ${p.approvals.city ? p.city : "Private"}</p>
              <p><b>Education:</b> ${p.approvals.education ? p.education : "Private"}</p>
              <p><b>Occupation:</b> ${p.approvals.occupation ? p.occupation : "Private"}</p>
              <p><b>Diet:</b> ${p.approvals.diet ? p.diet : "Private"}</p>
            `;
            profileBody.innerHTML = html;
            selectedProfileId = p.id;
            profilePopup.style.display = "flex";
          }
        };
        card.querySelector(".contactBtn").onclick = e => {
          e.stopPropagation();
          selectedProfileId = p.id;
          contactPopup.style.display = "flex";
        };
        profilesDiv.appendChild(card);
      });
    }

    searchInput.addEventListener("input", () => {
      const q = searchInput.value.toLowerCase();
      const filtered = allProfiles.filter(p =>
        (p.name && p.name.toLowerCase().includes(q)) ||
        (p.city && p.city.toLowerCase().includes(q)) ||
        (p.education && p.education.toLowerCase().includes(q))
      );
      renderProfiles(filtered);
    });

    contactForm.addEventListener("submit", async e => {
      e.preventDefault();
      await addDoc(contactsCol, {
        profileId: selectedProfileId,
        name: contactName.value,
        message: contactMessage.value,
        time: new Date()
      });
      contactForm.reset();
      closePopup('contactPopup');
      alert("Message sent to admin!");
    });

    function closePopup(id) {
      document.getElementById(id).style.display = "none";
    }

    loadProfiles();
  </script>
</body>
</html>
