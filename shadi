<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1"/>
  <title>Nikah Profiles</title>
  <style>
    body { font-family:"Segoe UI",sans-serif; margin:0; background:#f5f7f5; }
    header {
      background:#116530; color:white; text-align:center;
      padding:15px; position:sticky; top:0; z-index:100;
      box-shadow:0 2px 6px rgba(0,0,0,0.2);
      display:flex; justify-content:space-between; align-items:center;
    }
    header h1 { margin:0; font-size:22px; flex:1; }
    #logoutBtn {
      background:#dc3545; color:white; border:none; border-radius:6px;
      padding:6px 10px; cursor:pointer; margin-right:10px;
      display:none;
    }

    .top-btn { display:flex; justify-content:center; margin:15px 0; }
    .whatsapp-btn {
      background:#25d366; color:white; text-decoration:none;
      padding:10px 20px; font-weight:bold; border-radius:8px;
      display:inline-flex; align-items:center; gap:8px;
      box-shadow:0 4px 6px rgba(0,0,0,0.2);
    }
    .whatsapp-btn:hover { background:#1eb856; }

    main { max-width:1100px; margin:auto; padding:15px; }
    .grid {
      display:grid;
      grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
      gap:15px;
    }
    .card {
      background:white; border-radius:12px; overflow:hidden;
      box-shadow:0 3px 8px rgba(0,0,0,0.15);
      display:flex; flex-direction:column; align-items:center;
      transition:transform 0.2s;
    }
    .card:hover { transform:translateY(-4px); }
    .card img { width:100%; height:220px; object-fit:cover; background:#eee; }
    .card-body { padding:10px; text-align:center; }
    .card-body h3 { margin:6px 0; font-size:18px; color:#116530; }
    .card-body p { margin:4px 0; font-size:14px; color:#555; }
    .card-actions { display:flex; justify-content:center; gap:8px; padding:10px; }
    .card-actions button { border:none; padding:6px 10px; border-radius:6px; font-size:13px; cursor:pointer; }
    .edit-btn { background:#ffc107; }
    .delete-btn { background:#dc3545; color:white; }

    form {
      display:none; background:white; padding:20px;
      border-radius:12px; margin-top:20px; box-shadow:0 2px 6px rgba(0,0,0,0.1);
    }
    form h3 { margin-top:0; color:#116530; }
    form input {
      width:100%; margin:8px 0; padding:10px;
      border:1px solid #ccc; border-radius:6px;
    }
    form button {
      background:#116530; color:white; border:none;
      padding:10px 15px; border-radius:6px; cursor:pointer;
      font-size:15px;
    }

    #loginBtn {
      display:block; margin:20px auto; background:#4285F4;
      color:white; padding:10px 20px; border:none; border-radius:6px;
      cursor:pointer;
    }
    #msg { text-align:center; color:red; }

    /* Edit Popup */
    #editPopup {
      position:fixed; top:0; left:0; width:100%; height:100%;
      background:rgba(0,0,0,0.5); display:none; justify-content:center; align-items:center;
    }
    #editBox {
      background:white; padding:20px; border-radius:12px; width:90%; max-width:400px;
      box-shadow:0 4px 10px rgba(0,0,0,0.3);
    }
    #editBox h3 { margin-top:0; color:#116530; }
    #editBox input { width:100%; margin:8px 0; padding:10px; border:1px solid #ccc; border-radius:6px; }
    #editBox button { margin-top:10px; padding:10px; border:none; border-radius:6px; cursor:pointer; }
    #saveEditBtn { background:#116530; color:white; width:100%; }
    #cancelEditBtn { background:#999; color:white; width:100%; margin-top:5px; }
  </style>
</head>
<body>

<header>
  <h1>‡§®‡§ø‡§ï‡§æ‡§π ‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤‡•ç‡§∏</h1>
  <button id="logoutBtn" onclick="logout()">Logout</button>
</header>

<div class="top-btn">
  <a class="whatsapp-btn" href="https://wa.me/919112170192?text=Main%20Nikah%20Profile%20mein%20shamil%20hona%20chahta/chahti%20hoon">
    üì± WhatsApp se Join Karein
  </a>
</div>

<main>
  <div class="grid" id="members"></div>

  <button id="loginBtn" onclick="googleLogin()">Login with Google</button>
  <p id="msg"></p>

  <form id="memberForm">
    <h3>‡§®‡§à ‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤ ‡§ú‡•ã‡§°‡§º‡•á‡§Ç</h3>
    <input type="text" id="name" placeholder="‡§™‡•Ç‡§∞‡§æ ‡§®‡§æ‡§Æ" required>
    <input type="text" id="age" placeholder="‡§â‡§Æ‡•ç‡§∞" required>
    <input type="text" id="city" placeholder="‡§∂‡§π‡§∞" required>
    <input type="file" id="photoFile" accept="image/*" required>
    <button type="button" onclick="addMember()">Add Profile</button>
  </form>
</main>

<!-- Edit Popup -->
<div id="editPopup">
  <div id="editBox">
    <h3>‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤ ‡§è‡§°‡§ø‡§ü ‡§ï‡§∞‡•á‡§Ç</h3>
    <input type="text" id="editName" placeholder="‡§™‡•Ç‡§∞‡§æ ‡§®‡§æ‡§Æ">
    <input type="text" id="editAge" placeholder="‡§â‡§Æ‡•ç‡§∞">
    <input type="text" id="editCity" placeholder="‡§∂‡§π‡§∞">
    <input type="file" id="editPhoto" accept="image/*">
    <button id="saveEditBtn" onclick="saveEdit()">Save</button>
    <button id="cancelEditBtn" onclick="closeEdit()">Cancel</button>
  </div>
</div>

<!-- Firebase -->
<script src="https://www.gstatic.com/firebasejs/8.10.1/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/8.10.1/firebase-auth.js"></script>
<script src="https://www.gstatic.com/firebasejs/8.10.1/firebase-firestore.js"></script>

<script>
  const firebaseConfig = {
    apiKey: "AIzaSyDMvkPqFKDjrMaLlBkercBYoLxEs1GEbng",
    authDomain: "all-madrsa.firebaseapp.com",
    projectId: "all-madrsa",
    storageBucket: "all-madrsa.appspot.com",
    messagingSenderId: "619313835874",
    appId: "1:619313835874:web:e387e1297663f11fc2463b"
  };
  const imgbbKey = "d12c2e4a8650157b2b6b9fe85336ea43";

  firebase.initializeApp(firebaseConfig);
  const auth = firebase.auth();
  const db = firebase.firestore();

  const adminEmails = ["zaradigitalseva@gmail.com"]; // ‡§Ö‡§™‡§®‡•á admin emails ‡§°‡§æ‡§≤‡•ã

  const membersContainer = document.getElementById("members");
  const loginBtn = document.getElementById("loginBtn");
  const memberForm = document.getElementById("memberForm");
  const logoutBtn = document.getElementById("logoutBtn");

  let currentEditId = null;

  // Load profiles
  db.collection("members").orderBy("name").onSnapshot(snapshot=>{
    membersContainer.innerHTML="";
    snapshot.forEach(doc=>{
      const d = doc.data();
      const card = document.createElement("div");
      card.className="card";

      const img = document.createElement("img");
      img.src = d.photo;

      const body = document.createElement("div");
      body.className="card-body";
      body.innerHTML = `<h3>${d.name}</h3>
                        <p>‡§â‡§Æ‡•ç‡§∞: ${d.age || "-"} ‡§µ‡§∞‡•ç‡§∑</p>
                        <p>‡§∂‡§π‡§∞: ${d.city || "-"}</p>`;

      const actions = document.createElement("div");
      actions.className="card-actions";

      const contact = document.createElement("a");
      contact.href = `https://wa.me/91XXXXXXXXXX?text=Mujhe%20${encodeURIComponent(d.name)}%20ki%20profile%20mein%20interest%20hai`;
      contact.textContent = "üìû Contact";
      contact.style.background="#25d366";
      contact.style.color="white";
      contact.style.padding="6px 10px";
      contact.style.borderRadius="6px";
      contact.style.fontSize="13px";
      contact.style.textDecoration="none";
      actions.appendChild(contact);

      if(auth.currentUser && adminEmails.includes(auth.currentUser.email)){
        const edit = document.createElement("button");
        edit.className="edit-btn";
        edit.textContent="‚úèÔ∏è Edit";
        edit.onclick=()=>openEdit(doc.id,d);
        const del = document.createElement("button");
        del.className="delete-btn";
        del.textContent="üóë Delete";
        del.onclick=()=>deleteMember(doc.id);
        actions.appendChild(edit);
        actions.appendChild(del);
      }

      card.appendChild(img);
      card.appendChild(body);
      card.appendChild(actions);
      membersContainer.appendChild(card);
    });
  });

  auth.onAuthStateChanged(user=>{
    if(user){
      if(adminEmails.includes(user.email)){
        loginBtn.style.display="none";
        logoutBtn.style.display="block";
        memberForm.style.display="block";
      } else {
        loginBtn.style.display="none";
        logoutBtn.style.display="block";
        memberForm.style.display="none";
      }
    } else {
      loginBtn.style.display="block";
      logoutBtn.style.display="none";
      memberForm.style.display="none";
    }
  });

  function googleLogin(){
    const provider=new firebase.auth.GoogleAuthProvider();
    auth.signInWithPopup(provider);
  }

  function logout(){
    auth.signOut();
  }

  async function uploadImage(file){
    const fd=new FormData();
    fd.append("image", file);
    const res=await fetch(`https://api.imgbb.com/1/upload?key=${imgbbKey}`,{ method:"POST", body:fd });
    const data=await res.json();
    return data.data.url;
  }

  async function addMember(){
    const name=document.getElementById("name").value;
    const age=document.getElementById("age").value;
    const city=document.getElementById("city").value;
    const file=document.getElementById("photoFile").files[0];
    if(!file) return alert("‡§´‡•ã‡§ü‡•ã ‡§ö‡•Å‡§®‡•á‡§Ç");
    const photo=await uploadImage(file);
    await db.collection("members").add({name, age, city, photo});
    memberForm.reset();
    alert("‚úÖ ‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤ ‡§ú‡•ã‡§°‡§º‡•Ä ‡§ó‡§à!");
  }

  function openEdit(id,data){
    currentEditId = id;
    document.getElementById("editName").value = data.name;
    document.getElementById("editAge").value = data.age;
    document.getElementById("editCity").value = data.city;
    document.getElementById("editPopup").style.display = "flex";
  }

  function closeEdit(){
    document.getElementById("editPopup").style.display = "none";
    currentEditId = null;
  }

  async function saveEdit(){
    if(!currentEditId) return;
    const name=document.getElementById("editName").value;
    const age=document.getElementById("editAge").value;
    const city=document.getElementById("editCity").value;
    const file=document.getElementById("editPhoto").files[0];

    let updateData={name,age,city};
    if(file){
      const photo = await uploadImage(file);
      updateData.photo = photo;
    }

    await db.collection("members").doc(currentEditId).update(updateData);
    closeEdit();
    alert("‚úÖ ‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤ ‡§Ö‡§™‡§°‡•á‡§ü ‡§π‡•ã ‡§ó‡§Ø‡§æ");
  }

  function deleteMember(id){
    if(confirm("‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§µ‡§æ‡§ï‡§à ‡§á‡§∏ ‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤ ‡§ï‡•ã ‡§°‡§ø‡§≤‡•Ä‡§ü ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?")){
      db.collection("members").doc(id).delete();
    }
  }
</script>

</body>
</html>
