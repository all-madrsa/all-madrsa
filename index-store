<!doctype html>
<html lang="hi">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Talimi Ittehad</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    .title-3d {
      font-weight: bold;
      font-size: 1.8rem;
      color: white;
      text-shadow: 2px 2px 8px rgba(0,0,0,0.9);
    }
    .dropdown:hover .dropdown-menu { display:block; }
    .dropdown-menu {
      display:none;
      position:absolute;
      background:white;
      box-shadow:0 2px 6px rgba(0,0,0,0.2);
      border-radius:0.5rem;
      min-width:160px;
      z-index:50;
    }
    .dropdown-menu a {
      display:block;
      padding:6px 12px;
      font-size:14px;
      color:#333;
    }
    .dropdown-menu a:hover { background:#f3f4f6; }
    .btn-3d {
      background: linear-gradient(90deg,#ff4d4d,#4dffb8,#4d94ff,#d24dff);
      box-shadow: 0 4px 0 rgba(0,0,0,0.25), 0 6px 12px rgba(0,0,0,0.2);
      transition: transform .12s ease, box-shadow .12s ease;
      font-size: 0.85rem;
      padding: 0.35rem 0.7rem;
      color: white;
      font-weight: 600;
      border-radius: 6px;
    }
    .btn-3d:active { transform: translateY(1px); box-shadow: 0 2px 0 rgba(0,0,0,0.25); }
  </style>
</head>
<body class="bg-slate-50 min-h-screen">

<!-- Header -->
<header class="bg-gradient-to-r from-purple-700 via-pink-600 to-yellow-500 shadow sticky top-0 z-40">
  <div class="max-w-6xl mx-auto flex flex-col">
    <!-- Top bar -->
    <div class="flex items-center justify-between px-4 py-2">
      <div class="title-3d">Talimi Ittehad</div>
      <div class="flex items-center gap-2">
        <button id="addBtn" class="btn-3d hidden">+ Add Madarsa</button>
        <button id="authBtn" class="btn-3d">Login</button>
      </div>
    </div>
  </div>
</header>

<!-- Scrolling text -->
<div id="scrollBox" class="bg-gradient-to-r from-green-400 via-blue-500 to-purple-600 py-1">
  <marquee id="scrollText" class="text-white font-semibold">
    üì¢ Welcome to Talimi Ittehad ‚Äì ‡§ó‡§∞‡•Ä‡§¨ ‡§¨‡§ö‡•ç‡§ö‡•ã‡§Ç ‡§ï‡•Ä ‡§§‡§æ‡§≤‡•Ä‡§Æ ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§Æ‡§¶‡§¶ ‡§ú‡§∞‡•Ç‡§∞‡•Ä ‡§π‡•à!
  </marquee>
</div>

<!-- Main content -->
<main class="max-w-6xl mx-auto p-4">
  <div id="list" class="grid md:grid-cols-2 lg:grid-cols-3 gap-4"></div>
</main>

<!-- Modal: Madarsa Register -->
<div id="regModal" class="fixed inset-0 bg-black/40 hidden items-center justify-center p-4">
  <div class="bg-white rounded-lg shadow max-w-xl w-full p-4">
    <div class="flex justify-between items-center">
      <h3 class="text-lg font-semibold text-emerald-600">Register Madarsa</h3>
      <button onclick="closeModal()" class="text-gray-600">X</button>
    </div>
    <form id="regForm" class="mt-3 space-y-3">
      <input id="mname" placeholder="Madarsa ka naam" class="w-full border p-2 rounded" required />
      <input id="maddress" placeholder="Address" class="w-full border p-2 rounded" required />
      <input id="mcontact" placeholder="Contact number" class="w-full border p-2 rounded" required />
      <input id="mwhatsapp" placeholder="WhatsApp number" class="w-full border p-2 rounded" />
      <input id="mcourses" placeholder="Courses (comma separated)" class="w-full border p-2 rounded" />
      <div>
        <label class="block text-sm text-indigo-600">Upload Image</label>
        <input id="mimage" type="file" accept="image/*" />
      </div>
      <div class="flex justify-end gap-2">
        <button type="button" onclick="closeModal()" class="px-4 py-2 border rounded">Cancel</button>
        <button type="submit" class="btn-3d">Submit</button>
      </div>
    </form>
  </div>
</div>

<!-- Modal: Add Poster -->
<div id="posterModal" class="fixed inset-0 bg-black/40 hidden items-center justify-center p-4">
  <div class="bg-white rounded-lg shadow max-w-xl w-full p-4">
    <div class="flex justify-between items-center">
      <h3 class="text-lg font-semibold text-indigo-600">Add Poster</h3>
      <button onclick="closePosterModal()" class="text-gray-600">X</button>
    </div>
    <form id="posterForm" class="mt-3 space-y-3">
      <textarea id="pabout" placeholder="Poster About..." class="w-full border p-2 rounded" required></textarea>
      <div>
        <label class="block text-sm text-indigo-600">Upload up to 5 Images</label>
        <input id="pimages" type="file" accept="image/*" multiple />
      </div>
      <div class="flex justify-end gap-2">
        <button type="button" onclick="closePosterModal()" class="px-4 py-2 border rounded">Cancel</button>
        <button type="submit" class="btn-3d">Submit</button>
      </div>
    </form>
  </div>
</div>

<script type="module">
import { initializeApp } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-app.js";
import { getAuth, GoogleAuthProvider, signInWithPopup, signOut, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-auth.js";
import { getFirestore, collection, addDoc, updateDoc, doc, query, orderBy, onSnapshot, setDoc, where } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-firestore.js";
import { getStorage, ref, uploadBytes, getDownloadURL } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-storage.js";

const firebaseConfig = {
  apiKey: "AIzaSyDMvkPqFKDjrMaLlBkercBYoLxEs1GEbng",
  authDomain: "all-madrsa.firebaseapp.com",
  projectId: "all-madrsa",
  storageBucket: "all-madrsa.appspot.com",
  messagingSenderId: "619313835874",
  appId: "1:619313835874:web:e387e1297663f11fc2463b"
};

const app = initializeApp(firebaseConfig);
const auth = getAuth(app);
const db = getFirestore(app);
const storage = getStorage(app);
const provider = new GoogleAuthProvider();

const authBtn = document.getElementById('authBtn');
const addBtn = document.getElementById('addBtn');
const regModal = document.getElementById('regModal');
const posterModal = document.getElementById('posterModal');
const listDiv = document.getElementById('list');

let currentUser = null;
const ADMIN_EMAIL = "zarasamajiksevasanstha@gmail.com";

// ===== Modals =====
window.closeModal = () => regModal.classList.add('hidden');
window.closePosterModal = () => posterModal.classList.add('hidden');

// ===== Auth =====
authBtn.onclick = async () => {
  if (!auth.currentUser) await signInWithPopup(auth, provider);
  else await signOut(auth);
};

onAuthStateChanged(auth, user => {
  currentUser = user;
  authBtn.textContent = user ? "Logout" : "Login";
  addBtn.classList.toggle('hidden', !user);
  loadList();
});

// ===== Madarsa List =====
function loadList() {
  const q = query(collection(db, "madarse"), orderBy("createdAt", "desc"));
  onSnapshot(q, (qSnap) => {
    listDiv.innerHTML = '';
    qSnap.forEach(docSnap => {
      const d = docSnap.data();
      if (d.status !== "approved") return;

      const card = document.createElement('div');
      card.className = "border rounded-lg shadow bg-white p-3";

      card.innerHTML = `
        ${d.image ? `<img src="${d.image}" class="w-full h-40 object-contain mb-2"/>` : ""}
        <h2 class="font-bold text-lg">${d.name}</h2>
        <p class="text-sm text-gray-600">${d.address}</p>
        <button class="viewPosters btn-3d mt-2">üìú View Posters</button>
        <div class="posterSection hidden mt-3 border-t pt-2"></div>
      `;

      const posterSec = card.querySelector(".posterSection");
      card.querySelector(".viewPosters").addEventListener("click", () => {
        posterSec.classList.toggle("hidden");
        if (!posterSec.classList.contains("hidden")) loadPosters(docSnap.id, posterSec);
      });

      listDiv.appendChild(card);
    });
  });
}

// ===== Load Posters =====
function loadPosters(madarsaId, container) {
  const q = query(collection(db,"posters"), where("madarsaId","==",madarsaId), orderBy("createdAt","desc"));
  onSnapshot(q, (snap) => {
    container.innerHTML = '';
    if (currentUser) {
      const addBtn = document.createElement("button");
      addBtn.textContent = "‚ûï Add Poster";
      addBtn.className = "btn-3d mb-2";
      addBtn.onclick = () => {
        posterModal.classList.remove("hidden");
        posterModal.dataset.mid = madarsaId;
      };
      container.appendChild(addBtn);
    }
    snap.forEach(docSnap => {
      const p = docSnap.data();
      if (p.status !== "approved" && (!currentUser || currentUser.email !== ADMIN_EMAIL)) return;

      const div = document.createElement("div");
      div.className = "border rounded p-2 mb-2 bg-slate-50";
      div.innerHTML = `
        <p class="mb-2">${p.about}</p>
        <div class="grid grid-cols-2 gap-2">
          ${p.images.map(url => `<img src="${url}" class="h-32 object-cover rounded"/>`).join('')}
        </div>
        ${currentUser && currentUser.email===ADMIN_EMAIL ? `
          <div class="mt-2 flex gap-2">
            <button class="approve btn-3d">Approve</button>
            <button class="reject btn-3d">Reject</button>
          </div>` : ""}
      `;
      if (currentUser && currentUser.email===ADMIN_EMAIL){
        div.querySelector(".approve").onclick = ()=>updateDoc(doc(db,"posters",docSnap.id),{status:"approved"});
        div.querySelector(".reject").onclick = ()=>updateDoc(doc(db,"posters",docSnap.id),{status:"rejected"});
      }
      container.appendChild(div);
    });
  });
}

// ===== Poster Form Submit =====
document.getElementById("posterForm").onsubmit = async (e) => {
  e.preventDefault();
  const about = document.getElementById("pabout").value;
  const files = document.getElementById("pimages").files;
  const madarsaId = posterModal.dataset.mid;
  let urls = [];

  for (let i=0; i<files.length && i<5; i++){
    const f = files[i];
    const r = ref(storage, "posters/"+Date.now()+"_"+f.name);
    await uploadBytes(r,f);
    const url = await getDownloadURL(r);
    urls.push(url);
  }

  await addDoc(collection(db,"posters"),{
    madarsaId,
    about,
    images: urls,
    status:"pending",
    createdAt: new Date(),
    ownerUid: currentUser.uid
  });

  e.target.reset();
  closePosterModal();
};
</script>
</body>
</html>
