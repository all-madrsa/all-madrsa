<!doctype html>
<html lang="hi">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Talimi Ittehad</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    .btn-3d {
      background: linear-gradient(180deg,#4ade80,#16a34a);
      box-shadow: 0 4px 0 rgba(0,0,0,0.25), 0 6px 12px rgba(0,0,0,0.2);
      transform: translateY(-1px);
      transition: transform .12s ease, box-shadow .12s ease;
      font-size: 0.85rem;
      padding: 0.35rem 0.7rem;
    }
    .btn-3d:active { transform: translateY(1px); box-shadow: 0 2px 0 rgba(0,0,0,0.2); }
    .logo-text {
      font-size: 1.5rem;
      font-weight: 800;
      background: linear-gradient(90deg, #ff00cc, #3333ff, #00ffcc, #ff9900);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      text-shadow: 1px 1px 3px rgba(0,0,0,0.4);
    }
    .dropdown-menu {
      position: absolute;
      top: 100%; left: 0;
      background: white;
      border-radius: 0.5rem;
      padding: 0.5rem;
      display: none;
      min-width: 150px;
      box-shadow: 0 6px 12px rgba(0,0,0,0.2);
      z-index: 50;
    }
    .dropdown:hover .dropdown-menu { display: block; }
    .dropdown-menu a {
      display: block;
      padding: 0.25rem 0.5rem;
      font-size: 0.85rem;
      color: #333;
      border-radius: 0.25rem;
    }
    .dropdown-menu a:hover { background: #f3f4f6; }
    .card { transition: all 0.3s ease; cursor: pointer; position: relative; }
    .card.expanded { transform: scale(1.05); z-index: 10; }
  </style>
</head>
<body class="bg-slate-50 min-h-screen">

<!-- HEADER -->
<header class="bg-gradient-to-r from-purple-700 via-pink-600 to-indigo-700 shadow sticky top-0 z-40">
  <div class="max-w-6xl mx-auto px-3 py-2 flex flex-col md:flex-row md:items-center md:justify-between">
    <!-- Logo + Login -->
    <div class="flex items-center justify-between w-full md:w-auto">
      <div class="logo-text">Talimi Ittehad</div>
      <button id="authBtn" class="btn-3d ml-2">Login</button>
    </div>
    <!-- Menu + Buttons -->
    <div class="flex flex-wrap items-center gap-1 mt-2 md:mt-0 text-sm">
      <!-- Dropdown 1 -->
      <div class="dropdown relative">
        <button class="btn-3d">About ‚¨á</button>
        <div class="dropdown-menu">
          <a href="#">About</a>
          <a href="#">Contact</a>
          <a href="#">Privacy</a>
          <a href="#">Terms & Conditions</a>
        </div>
      </div>
      <!-- Dropdown 2 -->
      <div class="dropdown relative">
        <button class="btn-3d">More ‚¨á</button>
        <div class="dropdown-menu">
          <a href="#">Notice</a>
          <a href="#">Talim</a>
          <a href="#">Requirement</a>
          <a href="#">Program</a>
        </div>
      </div>
      <!-- Donate + Scroll buttons (tight together) -->
      <button class="btn-3d">üôè Donate</button>
      <button id="scrollBtn" class="btn-3d hidden">‚úç Add Text</button>
    </div>
  </div>
</header>

<!-- SCROLLING TEXT -->
<div id="scrollBox" class="bg-gradient-to-r from-yellow-400 via-red-400 to-pink-500 text-white py-1 overflow-hidden">
  <marquee behavior="scroll" direction="left" scrollamount="5" class="font-semibold">
    üì¢ Welcome to Talimi Ittehad ‚Äì ‡§∏‡§≠‡•Ä ‡§Æ‡§¶‡§∞‡§∏‡•á ‡§è‡§ï ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡§º‡•â‡§∞‡•ç‡§Æ ‡§™‡§∞ ‡§ú‡•Å‡§°‡§º‡•á‡§Ç, ‡§§‡§æ‡§≤‡•Ä‡§Æ ‡§ï‡•ã ‡§Ü‡§ó‡•á ‡§¨‡§¢‡§º‡§æ‡§è‡§Å üåô
  </marquee>
</div>

<!-- MAIN -->
<main class="max-w-6xl mx-auto p-4">
  <div id="list" class="grid md:grid-cols-2 lg:grid-cols-3 gap-4"></div>
</main>

<!-- MODAL (Register Madarsa) -->
<div id="regModal" class="fixed inset-0 bg-black/40 hidden items-center justify-center p-4">
  <div class="bg-white rounded-lg shadow max-w-xl w-full p-4">
    <div class="flex justify-between items-center">
      <h3 class="text-lg font-semibold text-emerald-600">Register Madarsa</h3>
      <button onclick="closeModal()" class="text-gray-600">X</button>
    </div>
    <form id="regForm" class="mt-3 space-y-3">
      <input id="mname" placeholder="Madarsa ka naam" class="w-full border p-2 rounded" required />
      <input id="maddress" placeholder="Address (City, State)" class="w-full border p-2 rounded" required />
      <input id="mcontact" placeholder="Contact number" class="w-full border p-2 rounded" required />
      <input id="mwhatsapp" placeholder="WhatsApp number" class="w-full border p-2 rounded" />
      <input id="mcourses" placeholder="Courses (comma separated)" class="w-full border p-2 rounded" />
      <div>
        <label class="block text-sm text-indigo-600">Upload Image (optional)</label>
        <input id="mimage" type="file" accept="image/*" class="mt-1" />
      </div>
      <div>
        <label class="block text-sm text-indigo-600">Upload UPI QR (optional)</label>
        <input id="mupi" type="file" accept="image/*" class="mt-1" />
      </div>
      <div class="flex justify-end gap-2">
        <button type="button" onclick="closeModal()" class="px-4 py-2 border rounded">Cancel</button>
        <button type="submit" class="btn-3d text-white rounded">Submit</button>
      </div>
    </form>
  </div>
</div>

<script type="module">
  import { initializeApp } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-app.js";
  import { getAuth, GoogleAuthProvider, signInWithPopup, signOut, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-auth.js";
  import { getFirestore, collection, addDoc, updateDoc, doc, query, orderBy, onSnapshot } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-firestore.js";

  const firebaseConfig = {
    apiKey: "AIzaSyDMvkPqFKDjrMaLlBkercBYoLxEs1GEbng",
    authDomain: "all-madrsa.firebaseapp.com",
    projectId: "all-madrsa",
    storageBucket: "all-madrsa.appspot.com",
    messagingSenderId: "619313835874",
    appId: "1:619313835874:web:e387e1297663f11fc2463b"
  };

  const app = initializeApp(firebaseConfig);
  const auth = getAuth(app);
  const db = getFirestore(app);
  const provider = new GoogleAuthProvider();

  const authBtn = document.getElementById('authBtn');
  const listDiv = document.getElementById('list');
  const regModal = document.getElementById('regModal');
  const regForm = document.getElementById('regForm');
  const scrollBtn = document.getElementById('scrollBtn');
  const ADMIN_EMAIL = "zaradigitalseva@gmail.com";

  let currentUser = null;

  window.openModal = () => { regModal.classList.remove('hidden'); regModal.classList.add('flex'); }
  window.closeModal = () => { regModal.classList.add('hidden'); regModal.classList.remove('flex'); regForm.reset(); }

  // Auth
  authBtn.onclick = async () => {
    try {
      if (!auth.currentUser) {
        await signInWithPopup(auth, provider);
      } else {
        await signOut(auth);
      }
    } catch (err) {
      alert("Login failed: " + err.message);
    }
  };

  onAuthStateChanged(auth, user => {
    currentUser = user;
    if (user) {
      authBtn.textContent = "Logout";
      if (user.email === ADMIN_EMAIL) {
        scrollBtn.classList.remove("hidden");
      }
    } else {
      authBtn.textContent = "Login";
      scrollBtn.classList.add("hidden");
    }
    loadList();
  });

  // Load list (live updates)
  function loadList() {
    const q = query(collection(db, "madarse"), orderBy("createdAt", "desc"));
    onSnapshot(q, (qSnap) => {
      listDiv.innerHTML = '';
      qSnap.forEach(docSnap => {
        const d = docSnap.data();

        if (d.status === "pending" && (!currentUser || currentUser.email !== ADMIN_EMAIL)) return;
        if (d.status === "rejected" && (!currentUser || (currentUser.email !== ADMIN_EMAIL && currentUser.uid !== d.ownerUid))) return;

        const card = document.createElement('div');
        card.className = `card p-4 rounded-xl shadow relative ${d.status === "approved" ? "bg-green-200" : "bg-gradient-to-r from-green-100 to-emerald-200"}`;

        card.innerHTML = `
          ${d.image ? `<img src="${d.image}" class="w-full h-48 object-contain bg-white rounded mb-2"/>` : ""}
          <div class="text-lg font-bold text-indigo-700">${escapeHtml(d.name || '')}</div>
          <div class="text-sm text-gray-700">${escapeHtml(d.address || '')}</div>
          ${d.showExtra && d.contact ? `<div class="mt-1 text-xs text-gray-800">üìû ${d.contact}</div>` : ""}
          ${d.status === "rejected" ? `<div class="text-red-600 font-bold mt-2">‚ùå Rejected</div>` : ""}
          <div class="extra hidden mt-2">
            ${d.courses && d.courses.length ? `<div class="text-sm text-pink-600"><b>üìö Courses:</b> ${d.courses.join(", ")}</div>` : ""}
            ${d.showExtra && d.whatsapp ? `<a href="https://wa.me/${d.whatsapp}" target="_blank" class="block mt-2 bg-green-500 text-white px-3 py-1 rounded">üì≤ WhatsApp</a>` : ""}
            ${d.showExtra && d.upi ? `
              <div class="mt-2">
                <img src="${d.upi}" class="w-32 rounded border mx-auto"/>
                <p class="text-center text-sm text-purple-700 mt-1">üôè Please donate for poor children's education (‡§ó‡§∞‡•Ä‡§¨ ‡§¨‡§ö‡•ç‡§ö‡•ã‡§Ç ‡§ï‡•Ä ‡§§‡§æ‡§≤‡•Ä‡§Æ ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡•á‡§Ç)</p>
              </div>` : ""}
          </div>
          ${currentUser && currentUser.email === ADMIN_EMAIL ? `
            <div class="flex gap-2 mt-2">
              ${d.status === "approved" 
                ? `<button disabled class="bg-green-600 text-white px-3 py-1 rounded shadow">‚úÖ Approved</button>` 
                : `<button class="approve btn-3d text-white rounded">Approve</button>`}
              <button class="reject bg-red-500 text-white px-3 py-1 rounded shadow">Reject</button>
              <button class="toggleExtra ${d.showExtra ? 'bg-orange-500' : 'bg-blue-500'} text-white px-3 py-1 rounded shadow">
                ${d.showExtra ? '‚ùå Disable Extra Info' : 'Enable Extra Info'}
              </button>
            </div>` : ""}
        `;

        // expand toggle
        card.querySelector("img")?.addEventListener("click", () => {
          card.classList.toggle("expanded");
          card.querySelector(".extra").classList.toggle("hidden");
        });

        // admin actions
        if (currentUser && currentUser.email === ADMIN_EMAIL) {
          card.querySelector(".approve")?.addEventListener("click", async () => {
            await updateDoc(doc(db, "madarse", docSnap.id), { status: "approved" });
          });
          card.querySelector(".reject")?.addEventListener("click", async () => {
            await updateDoc(doc(db, "madarse", docSnap.id), { status: "rejected" });
          });
          card.querySelector(".toggleExtra")?.addEventListener("click", async () => {
            await updateDoc(doc(db, "madarse", docSnap.id), { showExtra: !d.showExtra });
          });
        }

        listDiv.appendChild(card);
      });
    });
  }

  // Submit form
  regForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    if (!auth.currentUser) { alert('Google login required'); return; }

    const name = document.getElementById('mname').value.trim();
    const address = document.getElementById('maddress').value.trim();
    const contact = document.getElementById('mcontact').value.trim();
    const whatsapp = document.getElementById('mwhatsapp').value.trim();
    const courses = document.getElementById('mcourses').value.trim();
    const imageFile = document.getElementById('mimage').files[0];
    const upiFile = document.getElementById('mupi').files[0];

    let imgUrl = "", upiUrl = "";
    async function uploadImg(file) {
      const formData = new FormData();
      formData.append("image", file);
      const res = await fetch("https://api.imgbb.com/1/upload?key=c4bc97c133edb76e062de6d070df67e4", { method: "POST", body: formData });
      const data = await res.json();
      if (data.success) return data.data.url;
      else throw new Error(data.error.message);
    }

    if (imageFile) imgUrl = await uploadImg(imageFile).catch(err => alert("Image upload failed: " + err.message));
    if (upiFile) upiUrl = await uploadImg(upiFile).catch(err => alert("UPI upload failed: " + err.message));

    await addDoc(collection(db, 'madarse'), {
      name, address, contact, whatsapp,
      courses: courses ? courses.split(',').map(s => s.trim()) : [],
      image: imgUrl, upi: upiUrl,
      ownerUid: auth.currentUser.uid,
      ownerEmail: auth.currentUser.email,
      status: 'pending',
      showExtra: false,
      createdAt: Date.now()
    });

    alert('Registration submitted ‚úÖ');
    closeModal();
  });

  function escapeHtml(text) {
    if (!text) return '';
    return text.replace(/[&<>"']/g, c => (
      {'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[c]
    ));
  }
</script>
</body>
</html>
