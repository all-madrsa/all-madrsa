<!doctype html>
<html lang="hi">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Talimi Ittehad</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    .title-3d { font-weight:bold; font-size:1.8rem; color:white; text-shadow:2px 2px 8px rgba(0,0,0,0.9); }
    .btn-3d {
      background: linear-gradient(90deg,#ff4d4d,#4dffb8,#4d94ff,#d24dff);
      box-shadow: 0 4px 0 rgba(0,0,0,0.25), 0 6px 12px rgba(0,0,0,0.2);
      transition: transform .12s ease, box-shadow .12s ease;
      font-size: 0.85rem; padding: 0.35rem 0.7rem; color: white; font-weight: 600; border-radius: 6px;
    }
    .btn-3d:active { transform: translateY(1px); box-shadow: 0 2px 0 rgba(0,0,0,0.25); }
  </style>
</head>
<body class="bg-slate-50 min-h-screen">

<!-- Header -->
<header class="bg-gradient-to-r from-purple-700 via-pink-600 to-yellow-500 shadow sticky top-0 z-40">
  <div class="max-w-6xl mx-auto flex flex-col">
    <div class="flex items-center justify-between px-4 py-2">
      <div class="title-3d">Talimi Ittehad</div>
      <div class="flex items-center gap-2">
        <button id="addBtn" class="btn-3d hidden">+ Add Madarsa</button>
        <button id="authBtn" class="btn-3d">Login</button>
      </div>
    </div>
  </div>
</header>

<!-- Main content -->
<main class="max-w-6xl mx-auto p-4">
  <div id="list" class="grid md:grid-cols-2 lg:grid-cols-3 gap-4"></div>
</main>

<!-- Modal for Register -->
<div id="regModal" class="fixed inset-0 bg-black/40 hidden flex items-center justify-center p-4 z-50 overflow-auto">
  <div class="bg-white rounded-lg shadow max-w-xl w-full p-4">
    <div class="flex justify-between items-center">
      <h3 class="text-lg font-semibold text-emerald-600">Register Madarsa</h3>
      <button onclick="closeModal()" class="text-gray-600">X</button>
    </div>
    <form id="regForm" class="mt-3 space-y-3">
      <input id="mname" placeholder="Madarsa ka naam" class="w-full border p-2 rounded" required />
      <input id="maddress" placeholder="Address (City, State)" class="w-full border p-2 rounded" required />
      <input id="mcontact" placeholder="Contact number" class="w-full border p-2 rounded" required />
      <input id="mwhatsapp" placeholder="WhatsApp number" class="w-full border p-2 rounded" />
      <input id="mcourses" placeholder="Courses (comma separated)" class="w-full border p-2 rounded" />
      <textarea id="mabout" placeholder="About Madarsa (यह सबको सिर्फ admin enable करने के बाद दिखेगा)" rows="3" class="w-full border p-2 rounded"></textarea>
      <div><label class="block text-sm text-indigo-600">Upload Image</label><input id="mimage" type="file" accept="image/*" /></div>
      <div><label class="block text-sm text-indigo-600">Upload UPI QR</label><input id="mupi" type="file" accept="image/*" /></div>
      <div class="flex justify-end gap-2">
        <button type="button" onclick="closeModal()" class="px-4 py-2 border rounded">Cancel</button>
        <button type="submit" class="btn-3d">Submit</button>
      </div>
    </form>
  </div>
</div>

<script type="module">
  import { initializeApp } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-app.js";
  import { getAuth, GoogleAuthProvider, signInWithPopup, signOut, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-auth.js";
  import { getFirestore, collection, addDoc, updateDoc, doc, query, orderBy, onSnapshot, serverTimestamp } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-firestore.js";

  const firebaseConfig = {
    apiKey: "AIzaSyDMvkPqFKDjrMaLlBkercBYoLxEs1GEbng",
    authDomain: "all-madrsa.firebaseapp.com",
    projectId: "all-madrsa",
    storageBucket: "all-madrsa.appspot.com",
    messagingSenderId: "619313835874",
    appId: "1:619313835874:web:e387e1297663f11fc2463b"
  };

  const app = initializeApp(firebaseConfig);
  const auth = getAuth(app);
  const db = getFirestore(app);
  const provider = new GoogleAuthProvider();

  const authBtn = document.getElementById("authBtn");
  const addBtn = document.getElementById("addBtn");
  const regModal = document.getElementById("regModal");
  const listDiv = document.getElementById("list");

  let currentUser = null;
  const ADMIN_EMAIL = "zaradigitalseva@gmail.com";
  const IMGBB_API_KEY = "c4bc97c133edb76e062de6d070df67e4";

  // ✅ Helper: File -> Base64
  function toBase64(file) {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onload = () => resolve(reader.result.split(",")[1]);
      reader.onerror = (error) => reject(error);
    });
  }

  // ✅ Upload to ImgBB
  async function uploadToImgBB(file) {
    if (!file) return "";
    const base64 = await toBase64(file);
    const formData = new FormData();
    formData.append("image", base64);
    const res = await fetch(`https://api.imgbb.com/1/upload?key=${IMGBB_API_KEY}`, { method: "POST", body: formData });
    const data = await res.json();
    if (data.success) return data.data.url;
    else throw new Error("ImgBB Upload Failed: " + data.error.message);
  }

  // Modal helpers
  window.closeModal = () => { regModal.classList.add("hidden"); document.getElementById("regForm").reset(); }

  // Auth
  authBtn.onclick = async () => { if (!auth.currentUser) await signInWithPopup(auth, provider); else await signOut(auth); };
  onAuthStateChanged(auth, (user) => {
    currentUser = user;
    if (user) { authBtn.textContent="Logout"; addBtn.classList.remove("hidden"); }
    else { authBtn.textContent="Login"; addBtn.classList.add("hidden"); }
    loadList();
  });

  addBtn.onclick = () => { regModal.classList.remove("hidden"); regModal.classList.add("flex"); };

  // ✅ Form submit
  document.getElementById("regForm").addEventListener("submit", async (e) => {
    e.preventDefault();
    if (!currentUser) { alert("Please login first"); return; }

    try {
      const name = document.getElementById("mname").value.trim();
      const address = document.getElementById("maddress").value.trim();
      const contact = document.getElementById("mcontact").value.trim();
      const whatsapp = document.getElementById("mwhatsapp").value.trim();
      const courses = document.getElementById("mcourses").value.trim();
      const about = document.getElementById("mabout").value.trim();

      const imgFile = document.getElementById("mimage").files[0];
      const upiFile = document.getElementById("mupi").files[0];

      let imageUrl = imgFile ? await uploadToImgBB(imgFile) : "";
      let upiUrl = upiFile ? await uploadToImgBB(upiFile) : "";

      await addDoc(collection(db, "madarse"), {
        name, address, contact, whatsapp, courses, about,
        image: imageUrl, upi: upiUrl,
        ownerUid: currentUser.uid,
        createdAt: serverTimestamp(),
        status: "pending",
        showExtra: false
      });

      document.getElementById("regForm").reset();
      regModal.classList.add("hidden");
      alert("✅ Madarsa submitted for approval!");
    } catch (err) {
      alert("❌ Error: " + err.message);
    }
  });

  // ✅ Load list
  function loadList() {
    const q = query(collection(db, "madarse"), orderBy("createdAt", "desc"));
    onSnapshot(q, (qSnap) => {
      listDiv.innerHTML = "";
      qSnap.forEach(docSnap => {
        const d = docSnap.data();
        if (d.status==="pending" && (!currentUser || currentUser.email!==ADMIN_EMAIL)) return;
        if (d.status==="rejected" && (!currentUser || (currentUser.email!==ADMIN_EMAIL && currentUser.uid!==d.ownerUid))) return;

        const card = document.createElement("div");
        card.className = `border rounded-lg shadow bg-white p-3`;
        card.innerHTML = `
          ${d.image?`<img src="${d.image}" class="w-full h-40 object-cover rounded mb-2"/>`:""}
          <h2 class="font-bold text-lg">${d.name||''}</h2>
          <p class="text-sm text-gray-600">${d.address||''}</p>
          ${d.status==="rejected"?`<p class="text-red-600 font-semibold">❌ Rejected</p>`:""}
          <button class="toggleInfo btn-3d mt-2">ℹ Show Info</button>
          <div class="extra hidden mt-2">
            ${d.showExtra&&d.contact?`<p class="text-sm">📞 ${d.contact}</p>`:""}
            ${d.showExtra&&d.whatsapp?`<a href="https://wa.me/${d.whatsapp}" target="_blank" class="btn-3d mt-1 block text-center">📲 WhatsApp</a>`:""}
            ${d.showExtra&&d.upi?`<div class="mt-2"><img src="${d.upi}" class="w-24 mx-auto rounded border"/><p class="text-center text-xs text-pink-600">🙏 Please donate</p></div>`:""}
            ${d.showExtra&&d.about?`<p class="mt-2 text-gray-700 text-sm">📝 ${d.about}</p>`:""}
          </div>
          ${currentUser&&currentUser.email===ADMIN_EMAIL?`
            <div class="flex gap-2 mt-2">
              ${d.status==="approved"?`<button disabled class="btn-3d">✅ Approved</button>`:`<button class="approve btn-3d">Approve</button>`}
              <button class="reject btn-3d">Reject</button>
              <button class="toggleExtra btn-3d">${d.showExtra?'❌ Disable Extra Info':'🔓 Enable Extra Info'}</button>
            </div>`:""}
        `;

        // Show/Hide Info
        card.querySelector(".toggleInfo").addEventListener("click",()=>{
          const extra = card.querySelector(".extra");
          const btn = card.querySelector(".toggleInfo");
          extra.classList.toggle("hidden");
          btn.textContent = extra.classList.contains("hidden") ? "ℹ Show Info" : "Hide Info";
        });

        // Admin controls
        if(currentUser&&currentUser.email===ADMIN_EMAIL){
          card.querySelector(".approve")?.addEventListener("click",async()=>{ await updateDoc(doc(db,"madarse",docSnap.id),{status:"approved"}); });
          card.querySelector(".reject")?.addEventListener("click",async()=>{ await updateDoc(doc(db,"madarse",docSnap.id),{status:"rejected"}); });
          card.querySelector(".toggleExtra")?.addEventListener("click",async()=>{ await updateDoc(doc(db,"madarse",docSnap.id),{showExtra:!d.showExtra}); });
        }

        listDiv.appendChild(card);
      });
    });
  }
</script>
</body>
</html>
